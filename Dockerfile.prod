ARG NODE_VERSION


# FROM node:${NODE_VERSION}

# WORKDIR /usr/src/app

# COPY package*.json ./

# RUN node --use-openssl-ca

# RUN npm i

# COPY . .

# RUN npm run build --no-dev --mode=production

FROM node:${NODE_VERSION} AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /usr/src/app

COPY package.json package-lock.json ./
RUN  npm install --from-lockfile

FROM node:${NODE_VERSION} AS builder

ARG BACKEND_URL
ARG NGINX_HOST
ARG BACKEND_URL_WITH_PROTOCOL="${BACKEND_URL}:5000/ready"

WORKDIR /usr/src/app
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_TLS_REJECT_UNAUTHORIZED 0

RUN apk add bash curl

ADD https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh /usr/src/app/wait-for-it.sh
RUN chmod +x /usr/src/app/wait-for-it.sh

RUN sleep 20 && /usr/src/app/wait-for-it.sh api:5000/ready -- \
    npm run build && \
    npm i sharp

RUN rm -rf node_modules
RUN npm i --production --frozen-lockfile --ignore-scripts --prefer-offline

FROM node:${NODE_VERSION} AS runner
WORKDIR /usr/src/app

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_TLS_REJECT_UNAUTHORIZED 0

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/static ./.next/static
COPY --from=builder /usr/src/app/src/public ./public
COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/package.json ./package.json

USER nextjs

# EXPOSE 3000

# ENV PORT 3000

CMD ["node", "server.js"]