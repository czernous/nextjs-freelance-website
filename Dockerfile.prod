ARG NODE_VERSION


# FROM node:${NODE_VERSION}

# WORKDIR /usr/src/app

# COPY package*.json ./

# RUN node --use-openssl-ca

# RUN npm i

# COPY . .

# RUN npm run build --no-dev --mode=production

FROM node:${NODE_VERSION} AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /usr/src/app

COPY package.json package-lock.json ./
RUN  npm install --from-lockfile

FROM node:${NODE_VERSION} AS builder

ARG BLOG_API_URL
ARG CLIENT_URL
ARG API_KEY
ARG AUTH_API_URL
ARG AUTH_API_KEY
ARG APP_NAME
ARG ADMIN_EMAILS
ARG APP_DOMAIN

WORKDIR /usr/src/app
COPY --from=deps /usr/src/app/node_modules ./node_modules
COPY . .

ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_TLS_REJECT_UNAUTHORIZED 0

ENV BLOG_API_URL=${BLOG_API_URL}
ENV CLIENT_URL=${CLIENT_URL}
ENV API_KEY=${API_KEY}
ENV AUTH_API_URL=${AUTH_API_URL}
ENV AUTH_API_KEY=${AUTH_API_KEY}
ENV APP_NAME=${APP_NAME}
ENV ADMIN_EMAILS=${ADMIN_EMAILS}
ENV APP_DOMAIN=${APP_DOMAIN}

RUN apk --no-cache add bash curl

RUN npm run build

RUN rm -rf node_modules
ENV NEXT_SHARP_PATH /tmp/node_modules/sharp
RUN npm i --production --frozen-lockfile --ignore-scripts --prefer-offline

FROM node:${NODE_VERSION} AS runner
WORKDIR /usr/src/app

ARG BLOG_API_URL
ARG CLIENT_URL
ARG API_KEY
ARG AUTH_API_URL
ARG AUTH_API_KEY
ARG APP_NAME
ARG ADMIN_EMAILS
ARG APP_DOMAIN

ENV NODE_ENV production
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_TLS_REJECT_UNAUTHORIZED 0

ENV BLOG_API_URL=${BLOG_API_URL}
ENV CLIENT_URL=${CLIENT_URL}
ENV API_KEY=${API_KEY}
ENV AUTH_API_URL=${AUTH_API_URL}
ENV AUTH_API_KEY=${AUTH_API_KEY}
ENV APP_NAME=${APP_NAME}
ENV ADMIN_EMAILS=${ADMIN_EMAILS}
ENV APP_DOMAIN=${APP_DOMAIN}

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /usr/src/app/.next/static ./.next/static
# COPY --from=builder /usr/src/app/src/public ./public
COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/package.json ./package.json

USER nextjs

EXPOSE 3000

ENV PORT 3000

CMD ["node", "server.js"]